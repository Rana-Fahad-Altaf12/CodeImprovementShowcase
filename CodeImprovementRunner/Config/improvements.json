[
  {
    "Id": "01",
    "Title": "Singleton vs Scoped DbContext",
    "Bad": "Improvements._01_DbContextLifetime.Bad.SingletonDbContextExample",
    "Good": "Improvements._01_DbContextLifetime.Good.ScopedDbContextExample"
  },
  {
    "Id": "02",
    "Title": "IEnumerable vs IQueryable",
    "Bad": "Improvements._02_IEnumerableVsIQueryable.Bad.IEnumerableExample",
    "Good": "Improvements._02_IEnumerableVsIQueryable.Good.IQueryableExample"
  },
  {
    "Id": "03",
    "Title": "Any vs FirstOrDefault",
    "Bad": "Improvements._03_AnyVsFirstOrDefault.Bad.FirstOrDefaultExample",
    "Good": "Improvements._03_AnyVsFirstOrDefault.Good.AnyExample"
  },
  {
    "Id": "04",
    "Title": "Result vs Await",
    "Bad": "Improvements._04_ResultVsAwait.Bad.BlockingExample",
    "Good": "Improvements._04_ResultVsAwait.Good.AwaitExample"
  },
  {
    "Id": "05",
    "Title": "Multiple .ToList() calls vs Chained LINQ",
    "Bad": "Improvements._05_MultipleToListCalls.Bad.MultiToListExample",
    "Good": "Improvements._05_MultipleToListCalls.Good.ChainedLinqExample"
  },
  {
    "Id": "06",
    "Title": "Unnecessary Select projection vs Direct property access",
    "Bad": "Improvements._06_UnnecessarySelectVsDirectUse.Bad.UnnecessarySelectExample",
    "Good": "Improvements._06_UnnecessarySelectVsDirectUse.Good.DirectAccessExample"
  },
  {
    "Id": "07",
    "Title": "Multiple OR conditions vs .Contains() in LINQ",
    "Bad": "Improvements._07_OrConditionsVsContains.Bad.OrConditionsExample",
    "Good": "Improvements._07_OrConditionsVsContains.Good.ContainsExample"
  },
  {
    "Id": "08",
    "Title": "Count() > 0 vs Any() for existence check",
    "Bad": "Improvements._08_CountVsAny.Bad.CountCheckExample",
    "Good": "Improvements._08_CountVsAny.Good.AnyCheckExample"
  },
  {
    "Id": "09",
    "Title": "FirstOrDefault vs Any() for existence check",
    "Bad": "Improvements._09_FirstOrDefaultVsAny.Bad.FirstOrDefaultCheckExample",
    "Good": "Improvements._09_FirstOrDefaultVsAny.Good.AnyCheckExample"
  },
  {
    "Id": "10",
    "Title": "ToList() before filtering vs after filtering",
    "Bad": "Improvements._10_ToListBeforeVsAfterFilter.Bad.PrematureToListExample",
    "Good": "Improvements._10_ToListBeforeVsAfterFilter.Good.DeferredToListExample"
  },
  {
    "Id": "11",
    "Title": "Use StringBuilder instead of string concatenation",
    "Bad": "Improvements._11_StringBuilderVsStringConcat.Bad.StringConcatExample",
    "Good": "Improvements._11_StringBuilderVsStringConcat.Good.StringBuilderExample"
  },
  {
    "Id": "12",
    "Title": "Avoid Where().FirstOrDefault() – Use FirstOrDefault(predicate)",
    "Bad": "Improvements._12_WhereVsFirstOrDefaultPredicate.Bad.WhereThenFirstOrDefaultExample",
    "Good": "Improvements._12_WhereVsFirstOrDefaultPredicate.Good.FirstOrDefaultWithPredicateExample"
  },
  {
    "Id": "13",
    "Title": "Avoid .ToList().Any() – Use Any(predicate)",
    "Bad": "Improvements._13_ToListBeforeAny.Bad.ToListBeforeAnyExample",
    "Good": "Improvements._13_ToListBeforeAny.Good.DirectAnyCheckExample"
  },
  {
    "Id": "14",
    "Title": "Avoid Boxing with Value Types in Collections",
    "Bad": "Improvements._14_BoxingWithValueTypes.Bad.BoxingWithArrayList",
    "Good": "Improvements._14_BoxingWithValueTypes.Good.BoxingWithGenericList"
  },
  {
    "Id": "15",
    "Title": "Prefer IEnumerable<T> Over List<T> for Read-Only Access",
    "Bad": "Improvements._15_UseIEnumerableInsteadOfList.Bad.ReturnsListDirectly",
    "Good": "Improvements._15_UseIEnumerableInsteadOfList.Good.ReturnsIEnumerable"
  },
  {
    "Id": "16",
    "Title": "Use TryGetValue Instead of ContainsKey + Indexer",
    "Bad": "Improvements._16_TryGetValueInsteadOfContainsKey.Bad.ContainsKeyThenAccess",
    "Good": "Improvements._16_TryGetValueInsteadOfContainsKey.Good.TryGetValueAccess"
  },
  {
    "Id": "17",
    "Title": "Use string.IsNullOrWhiteSpace Instead of Manual Null/Empty Check",
    "Bad": "Improvements._17_UseIsNullOrWhiteSpace.Bad.ManualNullEmptyCheck",
    "Good": "Improvements._17_UseIsNullOrWhiteSpace.Good.IsNullOrWhiteSpaceCheck"
  },
  {
    "Id": "18",
    "Title": "Avoid Unnecessary async/await",
    "Bad": "Improvements._18_AvoidUnnecessaryAsync.Bad.UnnecessaryAsyncAwait",
    "Good": "Improvements._18_AvoidUnnecessaryAsync.Good.ReturnTaskDirectly"
  },
  {
    "Id": "19",
    "Title": "Use var When the Type is Obvious",
    "Bad": "Improvements._19_UseVarWhenObvious.Bad.ExplicitTypeWhenObvious",
    "Good": "Improvements._19_UseVarWhenObvious.Good.UseVarForClarity"
  },
  {
    "Id": "20",
    "Title": "Avoid Empty Catch Blocks",
    "Bad": "Improvements._20_AvoidEmptyCatchBlocks.Bad.SilentCatchBlock",
    "Good": "Improvements._20_AvoidEmptyCatchBlocks.Good.CatchWithLogging"
  },
  {
    "Id": "21",
    "Title": "Avoid Unnecessary Boxing",
    "Bad": "Improvements._21_AvoidUnnecessaryBoxing.Bad.BoxedInteger",
    "Good": "Improvements._21_AvoidUnnecessaryBoxing.Good.DirectIntegerUsage"
  },
  {
    "Id": "22",
    "Title": "Avoid Large Object Heap",
    "Bad": "Improvements._22_AvoidLargeObjectHeap.Bad.UsingLargeArray",
    "Good": "Improvements._22_AvoidLargeObjectHeap.Good.UseArrayPooling"
  },
  {
    "Id": "23",
    "Title": "Use Span for Slicing",
    "Bad": "Improvements._23_UseSpanForSlicing.Bad.StringSlicingWithSubstring",
    "Good": "Improvements._23_UseSpanForSlicing.Good.StringSlicingWithSpan"
  },
  {
    "Id": "24",
    "Title": "Minimize Allocations in Loops",
    "Bad": "Improvements._24_MinimizeAllocationsInLoops.Bad.AllocateInsideLoop",
    "Good": "Improvements._24_MinimizeAllocationsInLoops.Good.AllocateOnce"
  },
  {
    "Id": "25",
    "Title": "Use 'as' Instead of Cast",
    "Bad": "Improvements._25_UseAsInsteadOfCast.Bad.DirectCastExample",
    "Good": "Improvements._25_UseAsInsteadOfCast.Good.UseAsExample"
  },
  {
    "Id": "26",
    "Title": "Avoid Closure Pitfalls",
    "Bad": "Improvements._26_AvoidClosurePitfalls.Bad.ClosureIssue",
    "Good": "Improvements._26_AvoidClosurePitfalls.Good.CorrectedClosure"
  },
  {
    "Id": "27",
    "Title": "Defer Execution Only When Needed",
    "Bad": "Improvements._27_DeferExecutionOnlyWhenNeeded.Bad.UnexpectedDeferredExecution",
    "Good": "Improvements._27_DeferExecutionOnlyWhenNeeded.Good.EagerExecution"
  },
  {
    "Id": "28",
    "Title": "Avoid Excessive Logging",
    "Bad": "Improvements._28_AvoidExcessiveLogging.Bad.TooMuchLogging",
    "Good": "Improvements._28_AvoidExcessiveLogging.Good.EssentialLoggingOnly"
  },
  {
    "Id": "29",
    "Title": "Use CancellationTokens",
    "Bad": "Improvements._29_UseCancellationTokens.Bad.MissingCancellation",
    "Good": "Improvements._29_UseCancellationTokens.Good.UsesCancellationToken"
  },
  {
    "Id": "30",
    "Title": "Avoid Thread.Sleep",
    "Bad": "Improvements._30_AvoidThreadSleep.Bad.UsingThreadSleep",
    "Good": "Improvements._30_AvoidThreadSleep.Good.UseTaskDelay"
  },
  {
    "Id": "31",
    "Title": "Attribute routing vs conventional routing",
    "Bad": "Improvements._31_AttributeRoutingVsConventional.Bad.ConventionalRoutingExample",
    "Good": "Improvements._31_AttributeRoutingVsConventional.Good.AttributeRoutingExample"
  },
  {
    "Id": "32",
    "Title": "Hardcoded URLs vs IUrlHelper",
    "Bad": "Improvements._32_HardcodedUrlsVsUrlHelper.Bad.HardcodedUrlExample",
    "Good": "Improvements._32_HardcodedUrlsVsUrlHelper.Good.UrlHelperExample"
  },
  {
    "Id": "33",
    "Title": "Using query params vs route params",
    "Bad": "Improvements._33_QueryParamsVsRouteParams.Bad.QueryParameterUsage",
    "Good": "Improvements._33_QueryParamsVsRouteParams.Good.RouteParameterUsage"
  },
  {
    "Id": "34",
    "Title": "HTTP GET vs POST misuse",
    "Bad": "Improvements._34_HttpGetVsPostMisuse.Bad.GetUsedForMutation",
    "Good": "Improvements._34_HttpGetVsPostMisuse.Good.PostUsedForMutation"
  },
  {
    "Id": "35",
    "Title": "DTOs vs Entity exposure in APIs",
    "Bad": "Improvements._35_DtosVsEntityExposure.Bad.EntityReturnedDirectly",
    "Good": "Improvements._35_DtosVsEntityExposure.Good.DtoReturnedSafely"
  },
  {
    "Id": "36",
    "Title": "Using nullable reference types in APIs",
    "Bad": "Improvements._36_NullableReferenceTypesInApi.Bad.NullableWarningsIgnored",
    "Good": "Improvements._36_NullableReferenceTypesInApi.Good.NullableTypesUsedProperly"
  },
  {
    "Id": "37",
    "Title": "Validation in controller vs middleware/filter",
    "Bad": "Improvements._37_ValidationInControllerVsFilter.Bad.InlineValidationInController",
    "Good": "Improvements._37_ValidationInControllerVsFilter.Good.CentralizedValidationFilter"
  },
  {
    "Id": "38",
    "Title": "Versioning via URL vs header",
    "Bad": "Improvements._38_VersioningViaUrlVsHeader.Bad.UrlVersioningExample",
    "Good": "Improvements._38_VersioningViaUrlVsHeader.Good.HeaderVersioningExample"
  },
  {
    "Id": "39",
    "Title": "Returning IActionResult vs generic types",
    "Bad": "Improvements._39_IActionResultVsGenericTypes.Bad.UsesGenericReturn",
    "Good": "Improvements._39_IActionResultVsGenericTypes.Good.UsesIActionResult"
  },
  {
    "Id": "40",
    "Title": "Overloaded endpoints with same route",
    "Bad": "Improvements._40_OverloadedEndpointsSameRoute.Bad.OverloadedSameRoute",
    "Good": "Improvements._40_OverloadedEndpointsSameRoute.Good.DistinctRoutesForActions"
  },
  {
    "Id": "41",
    "Title": "Repository pattern vs direct DbContext",
    "Bad": "Improvements._41_RepositoryVsDbContext.Bad.RepositoryUsage",
    "Good": "Improvements._41_RepositoryVsDbContext.Good.RepositoryUsage"
  },
  {
    "Id": "42",
    "Title": "Unit of Work implementation",
    "Bad": "Improvements._42_UnitOfWorkImplementation.Bad.DirectDbContextCalls",
    "Good": "Improvements._42_UnitOfWorkImplementation.Good.UnitOfWorkUsage"
  },
  {
    "Id": "43",
    "Title": "Specification pattern",
    "Bad": "Improvements._43_SpecificationPattern.Bad.HardcodedFilterLogic",
    "Good": "Improvements._43_SpecificationPattern.Good.SpecificationPatternUsage"
  },
  {
    "Id": "44",
    "Title": "Domain services vs application services",
    "Bad": "Improvements._44_DomainVsApplicationServices.Bad.BusinessLogicInApplicationService",
    "Good": "Improvements._44_DomainVsApplicationServices.Good.ProperDomainServiceUse"
  },
  {
    "Id": "45",
    "Title": "Violating SRP in services",
    "Bad": "Improvements._45_ViolatingSRPInServices.Bad.FatServiceWithMultipleResponsibilities",
    "Good": "Improvements._45_ViolatingSRPInServices.Good.SplitResponsibilitiesIntoServices"
  },
  {
    "Id": "46",
    "Title": "Fat controllers vs thin controllers",
    "Bad": "Improvements._46_FatVsThinControllers.Bad.FatController",
    "Good": "Improvements._46_FatVsThinControllers.Good.ThinControllerWithService"
  },
  {
    "Id": "47",
    "Title": "Clean architecture layering mistake",
    "Bad": "Improvements._47_CleanArchitectureLayeringMistake.Bad.UiCallsRepositoryDirectly",
    "Good": "Improvements._47_CleanArchitectureLayeringMistake.Good.UiUsesApplicationLayer"
  },
  {
    "Id": "48",
    "Title": "Breaking Law of Demeter",
    "Bad": "Improvements._48_BreakingLawOfDemeter.Bad.TightlyCoupledChain",
    "Good": "Improvements._48_BreakingLawOfDemeter.Good.TellDontAskPrinciple"
  },
  {
    "Id": "49",
    "Title": "Poor modular boundaries in monoliths",
    "Bad": "Improvements._49_PoorModularBoundaries.Bad.TightlyCoupledModules",
    "Good": "Improvements._49_PoorModularBoundaries.Good.DecoupledModulesWithInterfaces"
  },
  {
    "Id": "50",
    "Title": "Service per feature vs service per entity",
    "Bad": "Improvements._50_ServicePerFeatureVsEntity.Bad.ServicePerEntityApproach",
    "Good": "Improvements._50_ServicePerFeatureVsEntity.Good.ServicePerFeatureApproach"
  },
  {
    "Id": "51",
    "Title": "Swallowing exceptions silently",
    "Bad": "Improvements._51_SwallowingExceptions.Bad.SilentException",
    "Good": "Improvements._51_SwallowingExceptions.Good.HandledWithLogging"
  },
  {
    "Id": "52",
    "Title": "Logging sensitive data",
    "Bad": "Improvements._52_LoggingSensitiveData.Bad.LoggingSensitiveInfo",
    "Good": "Improvements._52_LoggingSensitiveData.Good.SecureLogging"
  },
  {
    "Id": "53",
    "Title": "Overusing try/catch blocks",
    "Bad": "Improvements._53_OverusingTryCatch.Bad.OverusingTryCatch",
    "Good": "Improvements._53_OverusingTryCatch.Good.MinimalTryCatch"
  },
  {
    "Id": "54",
    "Title": "Not using ILogger<T>",
    "Bad": "Improvements._54_NotUsingILogger.Bad.ConsoleLogging",
    "Good": "Improvements._54_NotUsingILogger.Good.StructuredLogging"
  },
  {
    "Id": "55",
    "Title": "Rethrowing exceptions incorrectly",
    "Bad": "Improvements._55_RethrowingExceptions.Bad.RethrowWithEx",
    "Good": "Improvements._55_RethrowingExceptions.Good.RethrowWithThrow"
  },
  {
    "Id": "56",
    "Title": "Exceptions for flow control",
    "Bad": "Improvements._56_ExceptionsForFlowControl.Bad.ExceptionsAsFlowControl",
    "Good": "Improvements._56_ExceptionsForFlowControl.Good.ProperFlowControl"
  },
  {
    "Id": "57",
    "Title": "Ignoring task exceptions (unobserved)",
    "Bad": "Improvements._57_IgnoringTaskExceptions.Bad.UnobservedTask",
    "Good": "Improvements._57_IgnoringTaskExceptions.Good.ObservedTask"
  },
  {
    "Id": "58",
    "Title": "Logging inside catch vs bubbling up",
    "Bad": "Improvements._58_LoggingInsideCatch.Bad.LogInsideCatch",
    "Good": "Improvements._58_LoggingInsideCatch.Good.BubbleUpLogging"
  },
  {
    "Id": "59",
    "Title": "Global error handler vs scattered try-catch",
    "Bad": "Improvements._59_GlobalErrorHandlerVsScattered.Bad.ScatteredTryCatch",
    "Good": "Improvements._59_GlobalErrorHandlerVsScattered.Good.GlobalErrorHandler"
  },
  {
    "Id": "60",
    "Title": "Invalid model state handling",
    "Bad": "Improvements._60_InvalidModelStateHandling.Bad.IgnoringModelState",
    "Good": "Improvements._60_InvalidModelStateHandling.Good.ValidateModelState"
  },
  {
    "Id": "61",
    "Title": "Attribute routing vs conventional routing",
    "Bad": "Improvements._61_AttributeRoutingVsConventionalRouting.Bad.ConventionalRouting",
    "Good": "Improvements._61_AttributeRoutingVsConventionalRouting.Good.AttributeRouting"
  },
  {
    "Id": "62",
    "Title": "Hardcoded URLs vs IUrlHelper",
    "Bad": "Improvements._62_HardcodedUrlsVsIUrlHelper.Bad.HardcodedUrls",
    "Good": "Improvements._62_HardcodedUrlsVsIUrlHelper.Good.UrlHelperUsage"
  },
  {
    "Id": "63",
    "Title": "Using Query Params vs Route Params",
    "Bad": "Improvements._63_QueryVsRouteParams.Bad.BadQueryParams",
    "Good": "Improvements._63_QueryVsRouteParams.Good.GoodRouteParams"
  },
  {
    "Id": "64",
    "Title": "HTTP GET vs POST misuse",
    "Bad": "Improvements._64_HttpGetVsPost.Bad.BadHttpGetForUpdate",
    "Good": "Improvements._64_HttpGetVsPost.Good.GoodHttpPostForUpdate"
  },
  {
    "Id": "65",
    "Title": "DTOs vs Entity exposure in APIs",
    "Bad": "Improvements._65_DtosVsEntityExposure.Bad.BadExposeEntity",
    "Good": "Improvements._65_DtosVsEntityExposure.Good.GoodUseDto"
  },
  {
    "Id": "66",
    "Title": "Using nullable reference types in APIs",
    "Bad": "Improvements._66_NullableReferenceTypes.Bad.BadNullableHandling",
    "Good": "Improvements._66_NullableReferenceTypes.Good.GoodNullableHandling"
  },
  {
    "Id": "67",
    "Title": "Validation in controller vs middleware/filter",
    "Bad": "Improvements._67_ValidationLocation.Bad.BadValidation",
    "Good": "Improvements._67_ValidationLocation.Good.GoodValidation"
  },
  {
    "Id": "68",
    "Title": "Versioning via URL vs header",
    "Bad": "Improvements._68_Versioning.Bad.BadVersioning",
    "Good": "Improvements._68_Versioning.Good.GoodVersioning"
  },
  {
    "Id": "69",
    "Title": "Returning IActionResult vs generic types",
    "Bad": "Improvements._69_ReturningTypes.Bad.BadReturn",
    "Good": "Improvements._69_ReturningTypes.Good.GoodReturn"
  },
  {
    "Id": "70",
    "Title": "Overloaded endpoints with same route",
    "Bad": "Improvements._70_OverloadedRoutes.Bad.BadOverload",
    "Good": "Improvements._70_OverloadedRoutes.Good.GoodOverload"
  },
  {
    "Id": "71",
    "Title": "Repository pattern vs direct DbContext",
    "Bad": "Improvements._71_RepositoryVsDirectDbContext.Bad.DirectDbContextUsage",
    "Good": "Improvements._71_RepositoryVsDirectDbContext.Good.RepositoryPatternUsage"
  },
  {
    "Id": "72",
    "Title": "Unit of Work implementation",
    "Bad": "Improvements._72_UnitOfWorkImplementation.Bad.DirectRepositoryUsage",
    "Good": "Improvements._72_UnitOfWorkImplementation.Good.UnitOfWorkDemo"
  },
  {
    "Id": "73",
    "Title": "Specification pattern",
    "Bad": "Improvements._73_SpecificationPattern.Bad.InlineQueryLogic",
    "Good": "Improvements._73_SpecificationPattern.Good.SpecificationPatternUsage"
  },
  {
    "Id": "74",
    "Title": "Domain services vs application services",
    "Bad": "Improvements._74_DomainServicesVsApplicationServices.Bad.BusinessLogicInApplicationService",
    "Good": "Improvements._74_DomainServicesVsApplicationServices.Good.ProperDomainService"
  },
  {
    "Id": "75",
    "Title": "Violating SRP in services",
    "Bad": "Improvements._75_ViolatingSRPInServices.Bad.FatService",
    "Good": "Improvements._75_ViolatingSRPInServices.Good.SRPCompliantService"
  },
  {
    "Id": "76",
    "Title": "Fat controllers vs thin controllers",
    "Bad": "Improvements._76_FatControllersVsThinControllers.Bad.FatController",
    "Good": "Improvements._76_FatControllersVsThinControllers.Good.ThinController"
  },
  {
    "Id": "77",
    "Title": "Clean architecture layering mistake",
    "Bad": "Improvements._77_CleanArchitectureLayeringMistake.Bad.LayerViolation",
    "Good": "Improvements._77_CleanArchitectureLayeringMistake.Good.ProperLayering"
  },
  {
    "Id": "78",
    "Title": "Breaking Law of Demeter",
    "Bad": "Improvements._78_BreakingLawOfDemeter.Bad.LawOfDemeterViolation",
    "Good": "Improvements._78_BreakingLawOfDemeter.Good.LawOfDemeterCompliant"
  },
  {
    "Id": "79",
    "Title": "Poor modular boundaries in monoliths",
    "Bad": "Improvements._79_PoorModularBoundariesInMonoliths.Bad.TightlyCoupledModules",
    "Good": "Improvements._79_PoorModularBoundariesInMonoliths.Good.WellDefinedModules"
  },
  {
    "Id": "80",
    "Title": "Service per feature vs service per entity",
    "Bad": "Improvements._80_ServicePerFeatureVsServicePerEntity.Bad.ServicePerEntity",
    "Good": "Improvements._80_ServicePerFeatureVsServicePerEntity.Good.ServicePerFeature"
  },
  {
    "Id": "81",
    "Title": "Serializing entire objects vs DTOs",
    "Bad": "Improvements._81_SerializeObjectsVsDTOs.Bad.SerializeEntireObjects",
    "Good": "Improvements._81_SerializeObjectsVsDTOs.Good.UseDTOsForSerialization"
  },
  {
    "Id": "82",
    "Title": "Using File.ReadAllText for large files",
    "Bad": "Improvements._82_FileReadAllTextForLargeFiles.Bad.ReadAllTextLargeFile",
    "Good": "Improvements._82_FileReadAllTextForLargeFiles.Good.ReadFileStreamEfficiently"
  },
  {
    "Id": "83",
    "Title": "Storing config in code vs appsettings",
    "Bad": "Improvements._83_ConfigInCodeVsAppSettings.Bad.HardcodedConfig",
    "Good": "Improvements._83_ConfigInCodeVsAppSettings.Good.UseAppSettings"
  },
  {
    "Id": "84",
    "Title": "Accessing config directly in deep layers",
    "Bad": "Improvements._84_AccessConfigDirectlyInDeepLayers.Bad.DirectConfigAccess",
    "Good": "Improvements._84_AccessConfigDirectlyInDeepLayers.Good.InjectConfigViaDI"
  },
  {
    "Id": "85",
    "Title": "Using dynamic with JSON deserialize",
    "Bad": "Improvements._85_DynamicJsonDeserialization.Bad.DynamicJsonUsage",
    "Good": "Improvements._85_DynamicJsonDeserialization.Good.StronglyTypedDeserialization"
  },
  {
    "Id": "86",
    "Title": "NewtonsoftVsSystemTextJson",
    "Bad": "Improvements._86_NewtonsoftVsSystemTextJson.Bad.MixingJsonLibraries",
    "Good": "Improvements._86_NewtonsoftVsSystemTextJson.Good.UseSystemTextJsonConsistently"
  },
  {
    "Id": "87",
    "Title": "XmlVsJson",
    "Bad": "Improvements._87_XmlVsJson.Bad.UseXml",
    "Good": "Improvements._87_XmlVsJson.Good.UseJsonWhenApplicable"
  },
  {
    "Id": "88",
    "Title": "BinaryFormatterUsage",
    "Bad": "Improvements._88_BinaryFormatterUsage.Bad.BinaryFormatter",
    "Good": "Improvements._88_BinaryFormatterUsage.Good.SafeSerialization"
  },
  {
    "Id": "89",
    "Title": "ConfigReloadWithoutIOptionsSnapshot",
    "Bad": "Improvements._89_ConfigReloadWithoutIOptionsSnapshot.Bad.ManualConfigReload",
    "Good": "Improvements._89_ConfigReloadWithoutIOptionsSnapshot.Good.UseIOptionsSnapshotDemo"
  },
  {
    "Id": "90",
    "Title": "TempFilesWithoutCleanup",
    "Bad": "Improvements._90_TempFilesWithoutCleanup.Bad.CreateTempWithoutCleanup",
    "Good": "Improvements._90_TempFilesWithoutCleanup.Good.TempFileWithCleanup"
  }


]
